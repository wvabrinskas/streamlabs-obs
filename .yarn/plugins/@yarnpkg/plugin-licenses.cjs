/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-licenses",
factory: function (require) {
var plugin=(()=>{var se=Object.create,U=Object.defineProperty;var re=Object.getOwnPropertyDescriptor;var ae=Object.getOwnPropertyNames,V=Object.getOwnPropertySymbols,ce=Object.getPrototypeOf,z=Object.prototype.hasOwnProperty,le=Object.prototype.propertyIsEnumerable;var K=(e,t,n)=>t in e?U(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,F=(e,t)=>{for(var n in t||(t={}))z.call(t,n)&&K(e,n,t[n]);if(V)for(var n of V(t))le.call(t,n)&&K(e,n,t[n]);return e};var de=e=>U(e,"__esModule",{value:!0});var l=e=>{if(typeof require!="undefined")return require(e);throw new Error('Dynamic require of "'+e+'" is not supported')};var D=(e,t)=>{for(var n in t)U(e,n,{get:t[n],enumerable:!0})},pe=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ae(t))!z.call(e,i)&&i!=="default"&&U(e,i,{get:()=>t[i],enumerable:!(n=re(t,i))||n.enumerable});return e},d=e=>pe(de(U(e!=null?se(ce(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var ve={};D(ve,{default:()=>we});var ee=d(l("@yarnpkg/cli")),x=d(l("@yarnpkg/core")),w=d(l("clipanion"));var s=d(l("@yarnpkg/core")),f=d(l("@yarnpkg/fslib"));var R={};D(R,{fs:()=>me,getPackagePath:()=>fe});var q=d(l("@yarnpkg/plugin-pnp")),E=d(l("@yarnpkg/core")),j=d(l("@yarnpkg/fslib")),J=d(l("@yarnpkg/libzip")),fe=async(e,t)=>{ue(e);let n=E.structUtils.convertPackageToLocator(t),i={name:E.structUtils.stringifyIdent(n),reference:n.reference},o=S.getPackageInformation(i);if(!o)return null;let{packageLocation:a}=o;return a},S,ue=e=>{S||(S=module.require((0,q.getPnpPath)(e).cjs))},me=new j.VirtualFS({baseFs:new j.ZipOpenFS({libzip:(0,J.getLibzipSync)(),readOnlyArchives:!0})});var H={};D(H,{fs:()=>Pe,getPackagePath:()=>ge});var $=d(l("@yarnpkg/core")),Y=d(l("@yarnpkg/parsers")),y=d(l("@yarnpkg/fslib")),ge=async(e,t)=>{await he(e);let n=$.structUtils.convertPackageToLocator(t),i=W[$.structUtils.stringifyLocator(n)];if(!i)return null;let o=i.locations[0];return o?y.ppath.join(e.cwd,o):e.cwd},W,he=async e=>{if(!W){let t=y.ppath.join(e.configuration.projectCwd,y.Filename.nodeModules,".yarn-state.yml");W=(0,Y.parseSyml)(await y.xfs.readFilePromise(t,"utf8"))}},Pe=y.xfs;var B=e=>{switch(e){case"pnp":return R;case"node-modules":return H;default:throw new Error("Unsupported linker")}};var Se=f.npath.basename(__dirname)==="@yarnpkg"?f.ppath.join(f.npath.toPortablePath(__dirname),"../.."):f.ppath.join(f.npath.toPortablePath(__dirname),".."),Z=async(e,t,n,i,o)=>{let a={},g={children:a},r=await G(e,n,i),c=B(e.configuration.get("nodeLinker"));for(let[p,m]of r.entries()){let h=await c.getPackagePath(e,m);if(h===null)continue;let v=JSON.parse(await c.fs.readFilePromise(f.ppath.join(h,f.Filename.manifest),"utf8")),{license:u,url:N,vendorName:T,vendorUrl:I}=ke(v);a[u]||(a[u]={value:s.formatUtils.tuple(s.formatUtils.Type.NO_HINT,u),children:{}});let L=s.structUtils.convertPackageToLocator(m),P=s.formatUtils.tuple(s.formatUtils.Type.DEPENDENT,{locator:L,descriptor:p}),k=o?{}:F(F(F({},N?{url:{value:s.formatUtils.tuple(s.formatUtils.Type.NO_HINT,A("URL",N,t))}}:{}),T?{vendorName:{value:s.formatUtils.tuple(s.formatUtils.Type.NO_HINT,A("VendorName",T,t))}}:{}),I?{vendorUrl:{value:s.formatUtils.tuple(s.formatUtils.Type.NO_HINT,A("VendorUrl",I,t))}}:{}),ne={value:P,children:k},ie=s.structUtils.stringifyLocator(L),oe=a[u].children;oe[ie]=ne}return g},G=async(e,t,n)=>{let i=new Map,o;if(t){if(n){for(let c of e.workspaces)c.manifest.devDependencies.clear();let r=await s.Cache.find(e.configuration);await e.resolveEverything({report:new s.ThrowReport,cache:r})}o=e.storedDescriptors.values()}else o=e.workspaces.flatMap(r=>{let c=[r.anchoredDescriptor];for(let[p,m]of r.dependencies.entries())n&&r.manifest.devDependencies.has(p)||c.push(m);return c});let a=s.miscUtils.sortMap(o,[r=>s.structUtils.stringifyIdent(r),r=>s.structUtils.isVirtualDescriptor(r)?"0":"1",r=>r.range]),g=new Set;for(let r of a.values()){let c=e.storedResolutions.get(r.descriptorHash);if(!c)continue;let p=e.storedPackages.get(c);if(!p)continue;let{descriptorHash:m}=s.structUtils.isVirtualDescriptor(r)?s.structUtils.devirtualizeDescriptor(r):r;g.has(m)||(g.add(m),i.set(r,p))}return i},ke=e=>{let{license:t,licenses:n,repository:i,homepage:o,author:a}=e;return{license:(()=>{if(t)return _(t);if(n){if(n.length===1)return _(n[0]);if(n.length)return`(${n.map(_).join(" OR ")})`}return Q})(),url:(i==null?void 0:i.url)||o,vendorName:a==null?void 0:a.name,vendorUrl:o||(a==null?void 0:a.url)}},Q="UNKNOWN",_=e=>(typeof e!="string"?e.type:e)||Q,A=(e,t,n)=>n?t:`${e}: ${t}`,X=async(e,t,n)=>{let i=await G(e,t,n),o=B(e.configuration.get("nodeLinker")),a=new Map;for(let r of i.values()){let c=await o.getPackagePath(e,r);if(c===null)continue;let p=JSON.parse(await o.fs.readFilePromise(f.ppath.join(c,f.Filename.manifest),"utf8")),h=(await o.fs.readdirPromise(c,{withFileTypes:!0})).filter(P=>P.isFile()).map(({name:P})=>P),v=h.find(P=>{let k=P.toLowerCase();return k==="license"||k.startsWith("license.")||k==="unlicense"||k.startsWith("unlicense.")});if(!v)continue;let u=await o.fs.readFilePromise(f.ppath.join(c,v),"utf8"),N=h.find(P=>{let k=P.toLowerCase();return k==="notice"||k.startsWith("notice.")}),T;N&&(T=await o.fs.readFilePromise(f.ppath.join(c,N),"utf8"));let I=T?`${u}

NOTICE

${T}`:u,L=a.get(I);L?L.set(p.name,p):a.set(I,new Map([[p.name,p]]))}let g=`THE FOLLOWING SETS FORTH ATTRIBUTION NOTICES FOR THIRD PARTY SOFTWARE THAT MAY BE CONTAINED IN PORTIONS OF THE ${String(e.topLevelWorkspace.manifest.raw.name).toUpperCase().replace(/-/g," ")} PRODUCT.

`;for(let[r,c]of a.entries()){g+=`-----

`;let p=[],m=[];for(let{name:v,repository:u}of c.values())p.push(v),(u==null?void 0:u.url)&&m.push(c.size===1?u.url:`${u.url} (${v})`);let h=[];h.push(`The following software may be included in this product: ${p.join(", ")}.`),m.length>0&&h.push(`A copy of the source code may be downloaded from ${m.join(", ")}.`),h.push("This software contains the following license and notice below:"),g+=`${h.join(" ")}

`,g+=`${r.trim()}

`}return g};var M=class extends w.Command{constructor(){super(...arguments);this.recursive=w.Option.Boolean("-R,--recursive",!1,{description:"Include transitive dependencies (dependencies of direct dependencies)"});this.production=w.Option.Boolean("--production",!1,{description:"Exclude development dependencies"});this.json=w.Option.Boolean("--json",!1,{description:"Format output as JSON"});this.excludeMetadata=w.Option.Boolean("--exclude-metadata",!1,{description:"Exclude dependency metadata from output"})}async execute(){let t=await x.Configuration.find(this.context.cwd,this.context.plugins),{project:n,workspace:i}=await x.Project.find(t,this.context.cwd);if(!i)throw new ee.WorkspaceRequiredError(n.cwd,this.context.cwd);await n.restoreInstallState();let o=await Z(n,this.json,this.recursive,this.production,this.excludeMetadata);x.treeUtils.emitTree(o,{configuration:t,stdout:this.context.stdout,json:this.json,separators:1})}};M.paths=[["licenses","list"]],M.usage=w.Command.Usage({description:"display the licenses for all packages in the project",details:`
      This command prints the license information for packages in the project. By default, only direct dependencies are listed.

      If \`-R,--recursive\` is set, the listing will include transitive dependencies (dependencies of direct dependencies).

      If \`--production\` is set, the listing will exclude development dependencies.
    `,examples:[["List all licenses of direct dependencies","$0 licenses list"],["List all licenses of direct and transitive dependencies","$0 licenses list --recursive"],["List all licenses of production dependencies only","$0 licenses list --production"]]});var te=d(l("@yarnpkg/cli")),C=d(l("@yarnpkg/core")),b=d(l("clipanion"));var O=class extends b.Command{constructor(){super(...arguments);this.recursive=b.Option.Boolean("-R,--recursive",!1,{description:"Include transitive dependencies (dependencies of direct dependencies)"});this.production=b.Option.Boolean("--production",!1,{description:"Exclude development dependencies"})}async execute(){let t=await C.Configuration.find(this.context.cwd,this.context.plugins),{project:n,workspace:i}=await C.Project.find(t,this.context.cwd);if(!i)throw new te.WorkspaceRequiredError(n.cwd,this.context.cwd);await n.restoreInstallState();let o=await X(n,this.recursive,this.production);this.context.stdout.write(o)}};O.paths=[["licenses","generate-disclaimer"]],O.usage=b.Command.Usage({description:"display the license disclaimer including all packages in the project",details:`
      This command prints the license disclaimer for packages in the project. By default, only direct dependencies are listed.

      If \`-R,--recursive\` is set, the disclaimer will include transitive dependencies (dependencies of direct dependencies).

      If \`--production\` is set, the disclaimer will exclude development dependencies.
    `,examples:[["Include licenses of direct dependencies","$0 licenses generate-disclaimer"],["Include licenses of direct and transitive dependencies","$0 licenses generate-disclaimer --recursive"],["Include licenses of production dependencies only","$0 licenses list --production"]]});var ye={commands:[M,O]},we=ye;return ve;})();
return plugin;
}
};
